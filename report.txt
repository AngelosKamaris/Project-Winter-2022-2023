Algorithm 1 -->incremental + local search
Size   || minscore | max score | min bound | max bound ||
10   || 0.351727 | 0.879054 | 0.351727 | 0.879054 || 
50   || 0.207241 | 0.812827 | 0.207241 | 0.812827 || 
100   || 0.548793 | 1.49521 | 0.275357 | 0.722196 || 
200   || 0.249888 | 0.709136 | 0.249888 | 0.709136 || 
500   || 0.288635 | 0.689832 | 0.288635 | 0.689832 || 
1000   || 1.26462 | 0.68323 | 1 | 0 || 
2000   || 0.259975 | 0.688691 | 0.259975 | 0.688691 || 

Algorithm 2 --> incremental + local search + global step
Size   || minscore | max score | min bound | max bound ||
10   || 0.010037 | 0 | 0.010037 | 0 || 
50   || 0.196881 | 0.743578 | 0.196881 | 0.743578 || 
100   || 0.611332 | 1.41467 | 0.31869 | 0.675582 || 
200   || 0.266841 | 0.689052 | 0.266841 | 0.689052 || 
500   || 0.291159 | 0.684265 | 0.291159 | 0.684265 || 
1000   || 0.531603 | 1.38504 | 0.284268 | 0.690283 ||

--------------------------------------------------------------- REMOVE
Algorithm 2 --> incremental + global step
Size   || minscore | max score | min bound | max bound ||
10   || 0.219907 | 0.0530529 | 0.219907 | 0.0530529 || 
50   || 0.351214 | 0.615068 | 0.351214 | 0.615068 || 
100   || 0.678865 | 1.34911 | 0.340862 | 0.665522 || 
200   || 0.262421 | 0.684584 | 0.262421 | 0.684584 || 
500   || 0.301365 | 0.680288 | 0.301365 | 0.680288 || 
1000   || 0.554662 | 1.3563 | 0.287312 | 0.675454 || 
2000   || 0.263494 | 0.680124 | 0.263494 | 0.680124 ||
--------------------------------------------------------------- REMOVE

Algorithm 3
Size   || minscore | max score | min bound | max bound ||
10   || 1 | 0 | 1 | 0 || 
50   || 0.343369 | 0.596333 | 0.343369 | 0.596333 || 
100   || 0.637868 | 1.35756 | 0.35836 | 0.664766 || 
200   || 0.302992 | 0.726188 | 0.302992 | 0.726188 || 
500   || 0.299037 | 0.685628 | 0.299037 | 0.685628 || 
1000   || 0.557455 | 1.3615 | 0.291405 | 0.677792 ||

//marikaiti Algorithm 4 --> subdivision + local step
Size   || minscore | max score | min bound | max bound ||
10   || 0.142896 | 0.60619 | 0.142896 | 0.60619 || 
50   || 0.076702 | 0.705976 | 0.076702 | 0.705976 || 
100   || 0.616384 | 1.43136 | 0.329395 | 0.708182 || 
200   || 0.257199 | 0.785073 | 0.257199 | 0.785073 || 
500   || 0.281261 | 0.764369 | 0.281261 | 0.764369 || 
1000   || 0.588417 | 1.49927 | 0.307331 | 0.745435 ||


//aggelos Algorithm 4 --> subdivision + local step 
Size   || minscore | max score | min bound | max bound ||
10   || 0.328797 | 0.782841 | 0.328797 | 0.782841 || 
50   || 0.387477 | 0.649226 | 0.387477 | 0.649226 || 
100   || 0.684307 | 1.34978 | 0.350821 | 0.637276 || 
200   || 0.260468 | 0.684338 | 0.260468 | 0.684338 || 
500   || 0.293323 | 0.692661 | 0.293323 | 0.692661 || 
1000   || 0.548103 | 1.35183 | 0.282068 | 0.671311 ||


Algorithm 5 --> subdivision + global step
Size   || minscore | max score | min bound | max bound ||
10   || 0.0809416 | 0 | 0.0809416 | 0 || 
50   || 0.215975 | 0.705989 | 0.215975 | 0.705989 || 
100   || 0.650487 | 1.45316 | 0.354628 | 0.708876 || 
200   || 0.276026 | 0.798682 | 0.276026 | 0.798682 || 
500   || 0.280308 | 0.777189 | 0.280308 | 0.777189 || 
1000   || 0.58332 | 1.50442 | 0.305402 | 0.74996 ||

Algorithm 6 --> subdivision + global step +local step
Size   || minscore | max score | min bound | max bound ||
10   || 1 | 0 | 1 | 0 || 
50   || 0.315568 | 0.712092 | 0.315568 | 0.712092 || 
100   || 0.64208 | 1.48487 | 0.327483 | 0.739821 || 
200   || 0.298046 | 0.765173 | 0.298046 | 0.765173 || 
500   || 0.288235 | 0.764001 | 0.288235 | 0.764001 || 
1000   || 0.597307 | 1.49637 | 0.315303 | 0.74481 ||

Algorithm 7 --> subdivision + local step +global step
Size   || minscore | max score | min bound | max bound ||
10   || 0.0143386 | 0.454463 | 0.0143386 | 0.454463 || 
50   || 0.102106 | 0.675037 | 0.102106 | 0.675037 || 
100   || 0.562646 | 1.54815 | 0.306234 | 0.772319 || 
200   || 0.285175 | 0.80779 | 0.285175 | 0.80779 || 
500   || 0.296854 | 0.768692 | 0.296854 | 0.768692 || 
1000   || 0.597198 | 1.49861 | 0.313302 | 0.74705 ||