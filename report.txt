Algorithm 1 -->incremental + local search
Size   || minscore | max score | min bound | max bound ||
10   || 0.351727 | 0.879054 | 0.351727 | 0.879054 || 
50   || 0.207241 | 0.812827 | 0.207241 | 0.812827 || 
100   || 0.548793 | 1.49521 | 0.275357 | 0.722196 || 
200   || 0.249888 | 0.709136 | 0.249888 | 0.709136 || 
500   || 0.288635 | 0.689832 | 0.288635 | 0.689832 || 
1000   || 1.26462 | 0.68323 | 1 | 0 || 
2000   || 0.259975 | 0.688691 | 0.259975 | 0.688691 || 

Algorithm 2 --> incremental + global step
Size   || minscore | max score | min bound | max bound ||
10   || 0.219907 | 0.0530529 | 0.219907 | 0.0530529 || 
50   || 0.351214 | 0.615068 | 0.351214 | 0.615068 || 
100   || 0.678865 | 1.34911 | 0.340862 | 0.665522 || 
200   || 0.262421 | 0.684584 | 0.262421 | 0.684584 || 
500   || 0.301365 | 0.680288 | 0.301365 | 0.680288 || 
1000   || 0.554662 | 1.3563 | 0.287312 | 0.675454 || 
2000   || 0.263494 | 0.680124 | 0.263494 | 0.680124 ||

Algorithm 4 --> incremental + subdivision + local step 
Size   || minscore | max score | min bound | max bound ||
10   || 0.328797 | 0.782841 | 0.328797 | 0.782841 || 
50   || 0.387477 | 0.649226 | 0.387477 | 0.649226 || 
100   || 0.684307 | 1.34978 | 0.350821 | 0.637276 || 
200   || 0.260468 | 0.684338 | 0.260468 | 0.684338 || 
500   || 0.293323 | 0.692661 | 0.293323 | 0.692661 || 
1000   || 0.548103 | 1.35183 | 0.282068 | 0.671311 ||